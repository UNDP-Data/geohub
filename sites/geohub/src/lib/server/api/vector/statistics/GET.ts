import { Endpoint, z, error as apiError, type RouteModifier } from 'sveltekit-api';
import { fetchVectorTileInfo } from '$lib/server/helpers/fetchVectorInfo';
import type { VectorLayerTileStatLayer } from '@undp-data/svelte-undp-components';

export const Output = z
	.custom<VectorLayerTileStatLayer>()
	.describe('returns layer tile statistics equivalent to the tilestats generated by tippecanoe.')
	.openapi({
		example: {
			layer: 'zambia.poverty',
			geometry: 'Polygon',
			count: 145,
			attributeCount: 7,
			attributes: [
				{
					attribute: 'poverty',
					type: 'number',
					count: 145,
					min: 0.1,
					max: 0.96,
					mean: 0.6919310344827585,
					median: 0.78,
					std: 0.21315518783181625,
					histogram: {
						count: [9, 19, 10, 36, 71],
						bins: [0.1, 0.272, 0.444, 0.616, 0.788, 0.96]
					}
				}
			]
		}
	});

export const Query = z.object({
	path: z.string().describe('URL for vector tile. must be /0/0/0.pbf path').openapi({
		example: 'https://pgtileserv.undpgeohub.org/zambia.poverty/0/0/0.pbf'
	}),
	layer_name: z
		.string()
		.describe('layer name for vector tile')
		.openapi({ example: 'zambia.poverty' })
});

export const Error = {
	400: apiError(400, 'Bad request. Please verify the URL and/or parameters.')
};

export const Modifier: RouteModifier = (c) => {
	c.summary = 'Vector tile statistics API';
	c.description = 'This api it to calculate statistics for vector tiles from /0/0/0.pbf';
	c.tags = ['vector tile'];
	return c;
};

export default new Endpoint({ Query, Output, Modifier }).handle(async (param) => {
	const path = param.path;
	const layer_name = param.layer_name;
	if (!path || !layer_name) {
		throw Error[400];
	}

	// fetch vector tiles values
	const response = await fetchVectorTileInfo(path, layer_name);
	return response;
});
