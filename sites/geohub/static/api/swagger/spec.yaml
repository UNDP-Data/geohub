openapi: 3.0.0
info:
  title: GeoHub API specification
  version: '1.0'
  description: |
    This documentation describes GeoHub's endpoints specification.

    Our core API is `/api/datasets` which allows users to search GeoHub datasets freely. It returns the response as GeoJSON feature collection and looks like similar to STAC response. Once you received the datasets details, you can handle them with our tiling servers. All our datasets are cloud optimised either `COG (Cloud Optimised GeoTiff)` or `PMTiles`.

    ## Raster datasets
    You can use our dynamic rater tiling servers - [titiler](https://titiler.undpgeohub.org/) and [titiler-dev](https://titiler-dev.undpgeohub.org/)

    ## Vector datasets
    Generally, vector tiles can be handled with [maplibre-gl-js](https://maplibre.org/projects/maplibre-gl-js/). But if the dataset's URL starts with `pmtiles://`, you can use [PMTiles Javascript API](https://protomaps.com/docs/frontends/maplibre) to add new protocol to your maplibre.

    ## Community maps API
    You can also get style.json of saved map style through `/api/style` endpoints.

    ## Authentication
    Some endpoints (for `GET`, `POST`, `PUT`, `DELETE` apis) with a padlock icon are required to sign in prior to using them. GeoHub uses either Azure Active Directory or GitHub authentication with Auth.js package. Auth.js package provides the following endpoints to [sign in](/auth/signIn) / [sign out](auth/signout). Please sign in first before trying swagger. If you use these endpoints without signing in, the result from the server might be different.

    Or you can use `token` query param to access with a valid access token for `/api` endpoints which have a padlock icon in swagger. A token can be issued through `/api/token` endpoint after you sign in with SSO. Default expiry time of a token is an hour, if you need a token with longer expiry time, please contact to us.

    ## Issues
    Please feel free to report any issues on GitHub from [here](https://github.com/UNDP-Data/geohub/issues). Or if you have any questions, please create a thread in GitHub's [discussions](https://github.com/UNDP-Data/geohub/discussions) page.
  contact:
    email: jin.igarashi@undp.org
    url: 'https://geohub.data.undp.org'
  license:
    name: BSD-3-Clause license
    url: 'https://github.com/UNDP-Data/geohub/blob/develop/LICENSE'
servers:
  - url: /api
    description: GeoHub APIs
paths:
  '/datasets/{id}/table/layers/{layer}.{format}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Dataset ID
      - schema:
          type: string
        name: layer
        in: path
        required: true
        description: a layer ID. This should be equivalent to maplibre's source layer ID.
      - schema:
          type: string
          default: json
          enum:
            - json
            - csv
            - geojson
            - xlsx
        name: format
        in: path
        required: true
        description: 'Table format either json or csv or geojson or xlsx. default is json. '
    get:
      summary: Query attribute table for a layer
      tags:
        - datasets
      responses:
        '200':
          description: |-
            OK

            Attribute table data according to the format specifed in query param.

            If format is either json or geojson, it returns links and pages properties. If it is csv, it returns text/csv file. If json is selected as format, it omit geometry property from geojson.
          content:
            application/json:
              schema:
                type: object
                properties:
                  features:
                    type: array
                    x-stoplight:
                      id: dh8mjwf83l64t
                    items:
                      $ref: '#/components/schemas/GeoJSONFeature'
                  links:
                    type: array
                    x-stoplight:
                      id: w14b5l3y47id2
                    items:
                      $ref: '#/components/schemas/Link'
                  pages:
                    type: object
                    x-stoplight:
                      id: tygpber41ki1g
                    properties:
                      totalCount:
                        type: integer
                        x-stoplight:
                          id: cmol4zimxjoyq
                      totalPages:
                        type: integer
                        x-stoplight:
                          id: f4uftw55r0u46
                      currentPage:
                        type: integer
                        x-stoplight:
                          id: fc7aq09023798
        '400':
          description: |-
            Bad Request

            It returns 400 error in the following conditions:

            - If it is a raster layer
            - If layer does not exist in vector tiles
            - If bbox text does not align with minx, miny, maxx, maxy format
            - If format is invalid format
            - If limit or offset are not number
            - If sortby is wrong format, or specify the wrong field name
        '404':
          description: |-
            Not Found

            It returns 404 error in the following conditions:

            - If no dataset exists in the ID specifed
            - If no flatgeobuf exists to the dataset
          headers: {}
      operationId: get-datasets-id-attributes-layer
      description: |-
        This endpoint is to provide a capability to query attribute table for a vector layer. Currently, it is not available for raster layer.

        `query` param is to scan all properties to return any matched features. If you want to filter by specific columns, please use `cql_filter` instead.

        Use `cql_filter` to filter by advanced search. `cql_filter` only supports the following operators:

        `EQUAL TO [ = ]`, `LESS THAN [ < ]`, `LESS THAN OR EQUAL TO [ <= ]`, `GREATER THAN [ > ]`, `GREATER THAN OR EQUAL TO [ >= ]`, `IS NULL`, `LIKE`, `IN`, `NOT IN`, `BETWEEN aaa AND bbb`, `NOT [ <> ]`

        each condition can be concatenated by either `AND`, `OR`. operators should be capital letters.

        The below are examples of cql_filter for each operator.

        - `type_of_facility = 'Primary School'`
        - `student_number < 714`
        - `student_number <= 714`
        - `student_number > 782`
        - `student_number >= 782`
        - `condition IS NULL`
        - `facility_name LIKE EP`
        - `type_of_facility IN ('Primary School')`, `type_of_facility IN ('Primary School', 'Secondary School')`
        - `student_number NOT IN (701, 782)`
        - `student_number BETWEEN 600 AND 800`, `student_number BETWEEN 600 AND 800 AND type_of_facility = Secondary school`
        - `availability <> 'Regularly'`
      security:
        - Azure AD authentication: []
        - API access token: []
      parameters:
        - schema:
            type: string
          in: query
          name: query
          description: optional. text to query attribute table.
        - schema:
            type: integer
            default: 1000
          in: query
          description: optional. default is 1000.
          name: limit
        - schema:
            type: integer
            default: 0
          in: query
          name: offset
          description: optional. default is 0. Use it for pagination
        - schema:
            type: string
          in: query
          name: bbox
          description: 'optional. bbox (minx, miny, maxx, maxy) for filtering by geospatial extent. default is from metadata json'
        - schema:
            type: string
          in: query
          name: sortby
          description: 'optional. sorting column. format should be `{field name},{asc|desc}`'
        - schema:
            type: string
          in: query
          name: cql_filter
          description: optional. CQL filter to search data
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: compress
          description: 'optional. default is false. If true, compress response as gzip using compress api. Only available for either json or geojson format.'
  /swagger/spec.json:
    get:
      summary: Get open API JSON definition
      responses: {}
      operationId: get-swagger-spec.json
      description: Get open API JSON definition
      tags:
        - swagger
components:
  schemas:
    Tag:
      title: Tag
      x-stoplight:
        id: um38sy7bphx89
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        count:
          type: number
      required:
        - key
        - value
    QueryOperator:
      title: QueryOperator
      type: string
      enum:
        - and
        - or
    TagSearchOperator:
      title: TagSearchOperator
      type: string
      enum:
        - and
        - or
    SidebarPosition:
      title: SidebarPosition
      type: string
      enum:
        - left
        - right
    ClassificationMethodTypes:
      title: ClassificationMethodTypes
      type: string
      enum:
        - e
        - q
        - 'n'
        - l
    ResamplingMethodTypes:
      title: ResamplingMethodTypes
      type: string
      enum:
        - nearest
        - linear
    OverlapPriority:
      title: OverlapPriority
      type: string
      enum:
        - always
        - never
        - cooperative
    LinePattern:
      title: LinePattern
      type: string
      enum:
        - solid
        - dash
        - dash-dot
        - dot
    Link:
      title: Link
      x-stoplight:
        id: 758pae8gfhqq8
      type: object
      properties:
        rel:
          type: string
        type:
          type: string
        href:
          type: string
    GeoJSONFeature:
      type: object
      x-examples: {}
      description: GeoJSON feature object for GeoHub
      properties:
        type:
          type: string
        geometry:
          type: object
          properties:
            type:
              type: string
            coordinates:
              type: array
              items:
                type: number
        properties:
          type: object
          properties:
            id:
              type: string
            url:
              type: string
            name:
              type: string
            description:
              type: string
            is_raster:
              type: boolean
            license:
              type: string
            access_level:
              type: integer
            createdat:
              type: string
            created_user:
              type: string
            updatedat:
              type: string
            updated_user:
              type: string
            tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            no_stars:
              type: integer
            permission:
              type: integer
            is_star:
              type: boolean
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
    GeoJSONFeatureCollection:
      type: object
      x-examples: {}
      description: GeoJSON FeatureCollection object for GeoHub
      properties:
        type:
          type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/GeoJSONFeature'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        pages:
          type: object
          properties:
            totalCount:
              type: integer
            totalPages:
              type: integer
            currentPage:
              type: integer
    DatasetLayerStyle:
      title: DatasetLayerStyle
      x-stoplight:
        id: 3edd696171c73
      type: object
      description: Dataset style definition
      x-examples: {}
      properties:
        dataset_id:
          type: string
          description: dataset ID
        layer_id:
          type: string
        layer_type:
          type: string
          description: 'Layer type. fill, line, symbol, circle, heatmap, raster'
        source:
          type: object
          description: Maplibre source object
        style:
          type: object
          description: Maplibre layer style object
        colormap_name:
          type: string
          description: Colormap name if applicable
        classification_method:
          type: string
          description: Classification method if applicable
        classification_method_2:
          type: string
          x-stoplight:
            id: s5ozu37b48b7z
          description: 'classification method if there are two classification settings (icon size, line width) apart from color.'
        createdat:
          type: string
        created_user:
          type: string
        updatedat:
          type: string
        updated_user:
          type: string
      required:
        - dataset_id
        - layer_id
        - layer_type
        - source
        - style
        - createdat
        - created_user
    stac:
      title: stac
      x-stoplight:
        id: 51hxmfzs5mtju
      type: object
      description: STAC API/Catalog object
      x-examples:
        API:
          id: microsoft-pc
          name: Microsoft Planetary Computer
          url: 'https://planetarycomputer.microsoft.com/api/stac/v1'
          type: api
        Catalog:
          id: maxar-opendata
          name: Maxar Open Data
          url: 'https://maxar-opendata.s3.amazonaws.com/events/catalog.json'
          type: catalog
          providers:
            - Maxar Technologies
      properties:
        id:
          type: string
          description: STAC ID
        name:
          type: string
          x-stoplight:
            id: v1jc6kp2gikli
          description: STAC name
        url:
          type: string
          x-stoplight:
            id: eyl8a37kvp6ga
          description: API URL or catalog.json URL
        type:
          type: string
          x-stoplight:
            id: uaal8dmp1wuao
          description: either 'api' or 'catalog'
        providers:
          type: array
          x-stoplight:
            id: ape451kvnptqq
          description: list of provider names
          items:
            x-stoplight:
              id: olhqv5auy83ir
            type: string
        createdat:
          type: string
          x-stoplight:
            id: 124oktg1ynf9h
        created_user:
          type: string
          x-stoplight:
            id: a1bmx85anum4o
        updatedat:
          type: string
          x-stoplight:
            id: 2dgcrqaraoc0k
        updated_user:
          type: string
          x-stoplight:
            id: hscqetpry1rqr
      required:
        - id
        - name
        - url
        - type
        - createdat
        - created_user
  parameters:
    lon:
      name: lon
      in: path
      required: true
      schema:
        type: number
        default: 0
      description: longitude
    lat:
      name: lat
      in: path
      required: true
      schema:
        type: number
        default: 0
      description: latitude
    zoom:
      name: zoom
      in: path
      required: true
      schema:
        type: number
        default: 0
        minimum: 0
        maximum: 22
      description: zoom level
    width:
      name: width
      in: path
      required: true
      schema:
        type: integer
        default: 300
      description: image width (pixel)
    height:
      name: height
      in: path
      required: true
      schema:
        type: number
        default: 200
      description: image height (pixel)
    bbox:
      name: bbox
      in: path
      required: true
      schema:
        type: string
        example: '-4.04296875,-15.114552871944102,48.69140625,19.476950206488414'
      description: 'bbox (minx, miny, maxx, maxy)'
    bearing:
      name: bearing
      in: path
      required: true
      schema:
        type: number
        default: 0
      description: bearing
    pitch:
      name: pitch
      in: path
      required: true
      schema:
        type: number
        default: 0
      description: pitch
    format:
      name: format
      in: path
      required: true
      schema:
        type: string
        default: png
        enum:
          - png
          - jpeg
          - webp
      description: 'Supported format (jpeg, png, webp)'
    ratio:
      name: ratio
      in: query
      required: false
      schema:
        type: integer
        enum:
          - 1
          - 2
        default: 1
      description: ratio. either 1 or 2. Default is 1
    dataset_id:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: Dataset ID
    maplibre_layer_type:
      name: type
      in: path
      required: true
      schema:
        type: string
        enum:
          - fill
          - line
          - symbol
          - circle
          - heatmap
          - fill-extrusion
          - raster
      description: 'Maplibre layer type (fill, line, symbol, circle, heatmap, raster)'
    maplibre_layer_id:
      name: layer
      in: path
      required: true
      schema:
        type: string
      description: 'Band name if it is raster, layer ID if it is vector.'
    maplibre_layer_id_optional:
      name: layer
      in: query
      required: false
      schema:
        type: string
      description: 'Band name if it is raster, layer ID if it is vector.'
    maplibre_layer_type_optional:
      name: type
      in: query
      required: false
      schema:
        type: string
        enum:
          - fill
          - line
          - symbol
          - circle
          - heatmap
          - fill-extrusion
          - raster
      description: 'Maplibre layer type (fill, line, symbol, circle, heatmap, raster)'
    storymap_id:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: Storymap UUID
  securitySchemes:
    Azure AD authentication:
      type: http
      scheme: oauth
      description: Access to /auth/signin to sign in to Azure AD with your UNDP account.
    API access token:
      name: token
      type: apiKey
      in: query
  responses: {}
