openapi: 3.0.0
info:
  title: GeoHub API specification
  version: '1.0'
  description: |
    This documentation describes GeoHub's endpoints specification.

    Our core API is `/api/datasets` which allows users to search GeoHub datasets freely. It returns the response as GeoJSON featue collection and looks like similar to STAC response. Once you received the datasets details, you can handle them with our tiling servers. All our datasets are cloud optimised either `COG (Cloud Optimised GeoTiff)` or `PMTiles`.

    ## Raster datasets
    You can use our dynamic rater tiling servers - [titiler](https://titiler.undpgeohub.org/) and [titiler-dev](https://titiler-dev.undpgeohub.org/)

    ## Vector datasets
    Generally, vector tiles can be handled with [maplibre-gl-js](https://maplibre.org/projects/maplibre-gl-js/). But if the dataset's URL starts with `pmtiles://`, you can use [PMTiles Javascript API](https://protomaps.com/docs/frontends/maplibre) to add new protocol to your maplibre.

    ## Community maps API
    You can also get style.json of saved map style through `/api/style` endpoints.

    ## Authentication
    Some endpoints (for `GET`, `POST`, `PUT`, `DELETE` apis) with a padlock icon are required to sign in prior to using them. GeoHub uses either Azure Active Directory or GitHub authentication with Auth.js package. Auth.js package provides the following endpoints to [sign in](/auth/signIn) / [sign out](auth/signout). Please sign in first before trying swagger. If you use these endpoints without signing in, the result from the server might be different.

    Or you can use `token` query param to access with a valid access token for `/api` endpoints which have a padlock icon in swagger. A token can be issued through `/api/token` endpoint after you sign in with SSO. Default expiry time of a token is an hour, if you need a token with longer expiry time, please contact to us.

    ## Issues
    Please feel free to report any issues on GitHub from [here](https://github.com/UNDP-Data/geohub/issues). Or if you have any questions, please create a thread in GitHub's [discussions](https://github.com/UNDP-Data/geohub/discussions) page.
  contact:
    email: jin.igarashi@undp.org
    url: 'https://geohub.data.undp.org'
  license:
    name: BSD-3-Clause license
    url: 'https://github.com/UNDP-Data/geohub/blob/develop/LICENSE'
servers:
  - url: /api
    description: GeoHub APIs
paths:
  /datasets:
    get:
      summary: Datasets search API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoJSONFeatureCollection'
      operationId: get-datasets
      description: |-
        This API returns the result as GeoJSON feature collection format and it contains links property at the bottom.

        The links will have the following patterns.

        - self = URL for the query itself
        - root = URL origin for this API
        - next = URL for next page
        - previous = URL for previous page

        You can use next or previous links to implement paging feature.

        Flexiblely to search by key/value of tags.

        {key}={value} e.g., sdg_goal=1 to filter where tag key is sdg_goal and value is 1. If multiple key/value are set, it will filter by OR operator. if you want to filter by SDG1 and 2, you can query like '&sdg_goal=1&sdg_goal=2'
      parameters:
        - schema:
            type: string
          in: query
          name: query
          description: 'free text to search in name, description'
        - schema:
            type: string
          in: query
          name: bbox
          description: 'you can filter the data by bounding box (minx, miny, maxx, maxy)'
        - schema:
            type: number
          in: query
          name: limit
          description: The number of datasets retrieved. default is 10
        - schema:
            type: string
          in: query
          name: offset
          description: Offset value for paging. default is 0
        - schema:
            type: string
          in: query
          name: extent
          description: Search by extent value
        - schema:
            type: string
          in: query
          name: granularity
          description: Search by granularity value
        - schema:
            type: string
          in: query
          name: keyword
          description: Search by keyword value
        - schema:
            type: string
            enum:
              - table
              - function
          in: query
          name: layertype
          description: Search by layertype of pg_tileserv
        - schema:
            type: string
          in: query
          name: resolution
          description: Search by resolution value
        - schema:
            type: string
            enum:
              - '1'
              - '2'
              - '3'
              - '4'
              - '5'
              - '6'
              - '7'
              - '8'
              - '9'
              - '10'
              - '11'
              - '12'
              - '13'
              - '14'
              - '15'
              - '16'
              - '17'
          in: query
          name: sdg_goal
          description: search by sdg_goal value
        - schema:
            type: string
          in: query
          name: sdg_target
          description: search by sdg_target value
        - schema:
            type: string
            enum:
              - earth-search
              - microsoft-pc
          in: query
          name: stac
          description: search by stac value
        - schema:
            type: string
          in: query
          name: theme
          description: search by theme value
        - schema:
            type: string
            enum:
              - martin
              - pgtileserv
              - stac
          in: query
          name: type
          description: search by type value
        - schema:
            type: string
          in: query
          name: year
          description: search by year value
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: staronly
          description: 'if true, only search for favourite datasets'
        - schema:
            type: string
            default: and
            enum:
              - and
              - or
          in: query
          name: queryoperator
          description: operator for query search. convert space to either 'and' or 'or'
        - schema:
            type: string
            default: and
            enum:
              - and
              - or
          in: query
          name: operator
          description: 'operator for tag search. '
        - schema:
            type: boolean
            default: 'false'
            enum:
              - 'true'
              - 'false'
          in: query
          name: mydata
          description: 'if true, only fetch datasets owned by login user'
      tags:
        - datasets
      security:
        - Azure AD authentication: []
        - API access token: []
    post:
      summary: Register a dataset feature to GeoHub
      operationId: post-datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoJSONFeature'
      description: |-
        Register a dataset feature to GeoHub. If the dataset is already registered, the endpoint is going to update the dataset.

        Only signed in user can operate this endpoint
      security:
        - Azure AD authentication: []
        - API access token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoJSONFeature'
      tags:
        - datasets
  '/datasets/style/{layer}/{type}':
    parameters:
      - $ref: '#/components/parameters/maplibre_layer_type'
      - $ref: '#/components/parameters/maplibre_layer_id'
    post:
      summary: Create default layer style for unregistered dataset
      operationId: post-datasets-style-layer-type
      responses:
        '200':
          description: OK
      description: 'This endpoint is to return the default layer style for the dataset which is not registered to the database yet. The response is equivalent to the `/datasets/{id}/style/{layer}/{type}` API. But DatasetFeature object should be in body of POST request.'
      parameters:
        - schema:
            type: string
          in: query
          name: colormap_name
          description: 'Option. If specified, use this colormap to create layer style'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  $ref: '#/components/schemas/GeoJSONFeature'
        description: Dataset feature object
      tags:
        - datasets
      security:
        - Azure AD authentication: []
        - API access token: []
  '/datasets/{id}':
    parameters:
      - $ref: '#/components/parameters/dataset_id'
    get:
      summary: Get dataset feature by ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoJSONFeature'
      operationId: get-datasets-id
      description: get dataset feature by dataset ID
      tags:
        - datasets
      security:
        - Azure AD authentication: []
        - API access token: []
    delete:
      summary: Delete dataset by ID
      operationId: delete-datasets-id
      responses:
        '200':
          description: OK
      description: Delete dataset feature by dataset ID. This endpoint is required to sign in.
      tags:
        - datasets
      security:
        - Azure AD authentication: []
        - API access token: []
  '/datasets/{id}/permission':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Dataset ID
    get:
      summary: Get user permission info for a dataset
      tags:
        - datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetPermission'
      operationId: get-datasets-id-permission
      description: Get permission info for a dataset
      security:
        - Azure AD authentication: []
        - API access token: []
    post:
      summary: Register user permission for a dataset
      operationId: post-datasets-id-permission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetPermission'
      description: |
        Register user permission for a dataset

        - only users with owner/write/read permission can register.
        - users with write permission cannot register owner permission to a user.
        - users with read permission can register read permission to a user.
      tags:
        - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetPermission'
        description: ''
      security:
        - Azure AD authentication: []
        - API access token: []
    put:
      summary: Update user permission for a dataset
      operationId: put-datasets-id-permission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetPermission'
      description: |-
        Update user permission for a dataset

        - signed user cannot update their own permission
        - only users with owner/write/read permission can update.
        - users with write permission cannot update owner permission to a user.
        - users with read permission cannot update owner/write permission to a user.
      security:
        - Azure AD authentication: []
        - API access token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetPermission'
      tags:
        - datasets
    delete:
      summary: Delete user permission for a dataset
      operationId: delete-datasets-id-permission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetPermission'
      description: |-
        Delete user permission for a dataset

        - cannot delete signed in user themselves
        - only users with owner/write/read permission can delete.
        - users with write permission cannot delete owner.
        - users with read permission cannot delete owner/write
        - if only a user is registered, cannot delete user. at least a user needs to be registered
      security:
        - Azure AD authentication: []
        - API access token: []
      tags:
        - datasets
      parameters:
        - schema:
            type: string
          in: query
          name: user_email
          description: user email address
          required: true
  '/datasets/{id}/star':
    parameters:
      - $ref: '#/components/parameters/dataset_id'
    post:
      summary: Register dataset to favourite
      operationId: post-datasets-id-star
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataset_id:
                    type: string
                  user_email:
                    type: string
                  savedat:
                    type: string
                  no_stars:
                    type: integer
                required:
                  - dataset_id
                  - user_email
                  - savedat
      description: |-
        Register dataset to favourite
        This API only can be used when user sign in.
      tags:
        - datasets
      security:
        - Azure AD authentication: []
        - API access token: []
    delete:
      summary: Delete star from dataset
      operationId: delete-datasets-id-star
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataset_id:
                    type: string
                  no_stars:
                    type: integer
      description: |-
        Delete star from dataset
        This API only can be used when user sign in.
      tags:
        - datasets
      security:
        - Azure AD authentication: []
        - API access token: []
  '/datasets/{id}/star/count':
    parameters:
      - $ref: '#/components/parameters/dataset_id'
    get:
      summary: get star count for a dataset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataset_id:
                    type: string
                  no_stars:
                    type: integer
      operationId: get-datasets-id-star-count
      description: get the number of stars for a dataset
      tags:
        - datasets
      security:
        - Azure AD authentication: []
        - API access token: []
  '/datasets/{id}/style/{layer}/{type}':
    parameters:
      - $ref: '#/components/parameters/dataset_id'
      - $ref: '#/components/parameters/maplibre_layer_type'
      - $ref: '#/components/parameters/maplibre_layer_id'
    get:
      summary: Get default layer style for a dataset
      tags:
        - datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetLayerStyle'
        '404':
          description: Not Found
        '':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataset_id:
                    type: string
                  layer_type:
                    type: string
                  source:
                    type: string
                    description: JSON object for maplibre source
      operationId: get-datasets-id-style
      description: |-
        This endpoint is to return the default layer style for specified dataset if the style infomation is registered in the database.

        This endpoint's response contains two variables which are `style.id={layer_id}` and `style.source={source_id}`. When you use this default style in maplibre, please generate unique layer ID and soruce ID, then replace them before adding layer to maplibre.

        If the style is not registered in the database yet, the endpoint will create style randomly.

        **This endpoint might be restricted by the access level of the dataset**
      security:
        - Azure AD authentication: []
        - API access token: []
      parameters:
        - schema:
            type: string
          in: query
          name: colormap_name
          description: 'Option. If specified, use this colormap to create layer style'
    post:
      summary: Register default layer style for a dataset
      operationId: post-datasets-id-style-type
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetLayerStyle'
      description: |-
        This endpoint is to register the default layer style for specified dataset.

        This endpoint will replace `style.id` to `style.id={layer_id}` and `style.source` to `style.source={source_id}`. When you use this default style in maplibre, please generate unique layer ID and soruce ID, then replace them before adding layer to maplibre.

        **This endpoint only can be used by the dataset owner or super user.**
      tags:
        - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetLayerStyle'
            examples:
              Example for vector:
                value:
                  dataset_id: 8c4810867c50ee006b11abf19876a750
                  layer_id: drr.dynamic_subnational_hhr
                  layer_type: fill
                  source:
                    type: vector
                    url: 'https://dev.undpgeohub.org/api/vector/pgtileserv/tile.json?table=drr.dynamic_subnational_hhr&type=function'
                    tiles:
                      - 'https://pgtileserv.undpgeohub.org/drr.dynamic_subnational_hhr/{z}/{x}/{y}.pbf?params={"hdi_adjustment"%3A{"value"%3A5.4}%2C"working_age_pop_adjustment"%3A{"value"%3A-4.9}}'
                  style:
                    id: 6b45fc16-6e59-438c-ae7a-57f6dcc8b09c
                    type: fill
                    source: 8c4810867c50ee006b11abf19876a750
                    source-layer: drr.dynamic_subnational_hhr
                    minzoom: 0
                    layout:
                      visibility: visible
                    paint:
                      fill-color:
                        type: interval
                        property: heat_health_risk_index
                        stops:
                          - - 16.88
                            - 'rgba(158, 1, 66, 1)'
                          - - 29.78
                            - 'rgba(249, 142, 82, 1)'
                          - - 43.71
                            - 'rgba(255, 255, 191, 1)'
                          - - 58.52
                            - 'rgba(137, 208, 165, 1)'
                          - - 72.71
                            - 'rgba(94, 79, 162, 1)'
                        default: 'rgba(0,0,0,0)'
                      fill-outline-color:
                        property: heat_health_risk_index
                        type: interval
                        stops:
                          - - 16.88
                            - 'rgba(52, 0, 0, 1)'
                          - - 29.78
                            - 'rgba(108, 23, 0, 1)'
                          - - 43.71
                            - 'rgba(125, 127, 70, 1)'
                          - - 58.52
                            - 'rgba(5, 85, 50, 1)'
                          - - 72.71
                            - 'rgba(0, 0, 47, 1)'
                        default: 'rgba(0,0,0,0)'
                      fill-opacity: 1
                  colormap_name: spectral
                  classification_method: q
        description: ''
      security:
        - Azure AD authentication: []
        - API access token: []
    delete:
      summary: Delete default layer style for a dataset
      operationId: delete-datasets-id-style-type
      responses:
        '204':
          description: No Content
      description: |-
        This endpoint is to update the default layer style for specified dataset

        **This endpoint only can be used by the dataset owner or super user.**
      tags:
        - datasets
      security:
        - Azure AD authentication: []
        - API access token: []
  '/datasets/{id}/preview/style.json':
    parameters:
      - $ref: '#/components/parameters/dataset_id'
    get:
      summary: Get Maplibre style.json for preview map
      tags:
        - datasets
      responses: {}
      operationId: get-datasets-id-preview-style.json
      description: |-
        This endpoint is to create a style.json with default style for the dataset preview.

        If `type` is not specified, the layer type will be assumed by the geometry type of the layer.

        If `layer` is not specified, the first layer (if vector) or the first band (if raster) will be used.
      parameters:
        - $ref: '#/components/parameters/maplibre_layer_type_optional'
        - $ref: '#/components/parameters/maplibre_layer_id_optional'
  '/datasets/{id}/preview/auto/{width}x{height}.{format}':
    parameters:
      - $ref: '#/components/parameters/dataset_id'
      - $ref: '#/components/parameters/width'
      - $ref: '#/components/parameters/height'
      - $ref: '#/components/parameters/format'
    get:
      summary: Get a preview image for the dataset by using the default location
      tags:
        - datasets
      responses: {}
      operationId: get-datasets-id-preview-auto
      description: This endpoint is to create a preview image for the dataset. The default location saved in the dataset will be used automatically.
      parameters:
        - $ref: '#/components/parameters/maplibre_layer_id_optional'
        - $ref: '#/components/parameters/maplibre_layer_type_optional'
  '/datasets/{id}/preview/{bbox}/{width}x{height}.{format}':
    parameters:
      - $ref: '#/components/parameters/dataset_id'
      - $ref: '#/components/parameters/bbox'
      - $ref: '#/components/parameters/width'
      - $ref: '#/components/parameters/height'
      - $ref: '#/components/parameters/format'
    get:
      summary: Get a preview image for the dataset by using specific BBOX
      tags:
        - datasets
      responses: {}
      operationId: get-datasets-id-preview-bbox
      description: This endpoint is to create a preview image for the dataset by specifing the BBOX boundary
      parameters:
        - $ref: '#/components/parameters/maplibre_layer_id_optional'
        - $ref: '#/components/parameters/maplibre_layer_type_optional'
  '/datasets/{id}/preview/{lon},{lat},{zoom},{bearing},{pitch}/{width}x{height}.{format}':
    parameters:
      - $ref: '#/components/parameters/dataset_id'
      - $ref: '#/components/parameters/lon'
      - $ref: '#/components/parameters/lat'
      - $ref: '#/components/parameters/zoom'
      - $ref: '#/components/parameters/bearing'
      - $ref: '#/components/parameters/pitch'
      - $ref: '#/components/parameters/width'
      - $ref: '#/components/parameters/height'
      - $ref: '#/components/parameters/format'
    get:
      summary: Get a preview image for the dataset with manually specified parameters
      tags:
        - datasets
      responses: {}
      operationId: get-datasets-id-preview-lon-lat-zoom-bearing-pitch
      description: This endpoint is to create a preview image for the dataset with manually specified parameters
      parameters:
        - $ref: '#/components/parameters/maplibre_layer_id_optional'
        - $ref: '#/components/parameters/maplibre_layer_type_optional'
  /datasets/ingesting:
    get:
      summary: Get status of ingesting datasets
      tags:
        - datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                x-examples:
                  Example 1:
                    - raw:
                        name: Anthropogenic_Biomes_20230224163255.tif
                        url: 'https://undpgeohub.blob.core.windows.net/userdata/a85516c81c0b78d3e89d3f00099b8b15/raw/Anthropogenic_Biomes_20230224163255.tif?sv=2021-10-04&ss=b&srt=o&se=2023-02-24T19%3A58%3A12Z&sp=r&sig=bCEjmWyg2ggSLrF0%2FwNVVTujRjM7Wi8rb3b9zpVpNpU%3D'
                        contentLength: 832784
                        createdat: '2023-02-24T16:32:58.000Z'
                        updatedat: '2023-02-24T16:32:58.000Z'
                        error: 'https://undpgeohub.blob.core.windows.net/userdata/a85516c81c0b78d3e89d3f00099b8b15/raw/Anthropogenic_Biomes_20230224163255.tif.error?sv=2021-10-04&ss=b&srt=o&se=2023-02-24T19%3A58%3A12Z&sp=r&sig=bCEjmWyg2ggSLrF0%2FwNVVTujRjM7Wi8rb3b9zpVpNpU%3D'
                    - raw:
                        name: admin0_20230224161338.pmtiles
                        url: 'https://undpgeohub.blob.core.windows.net/userdata/a85516c81c0b78d3e89d3f00099b8b15/raw/admin0_20230224161338.pmtiles?sv=2021-10-04&ss=b&srt=o&se=2023-02-24T19%3A58%3A12Z&sp=r&sig=bCEjmWyg2ggSLrF0%2FwNVVTujRjM7Wi8rb3b9zpVpNpU%3D'
                        contentLength: 11813331
                        createdat: '2023-02-24T16:14:14.000Z'
                        updatedat: '2023-02-24T16:14:14.000Z'
                      datasets:
                        - name: admin0_20230224161338.pmtiles
                          url: 'https://undpgeohub.blob.core.windows.net/userdata/a85516c81c0b78d3e89d3f00099b8b15/datasets/admin0_20230224161338.pmtiles/admin0_20230224161338.pmtiles?sv=2021-10-04&ss=b&srt=o&se=2023-02-24T19%3A58%3A12Z&sp=r&sig=bCEjmWyg2ggSLrF0%2FwNVVTujRjM7Wi8rb3b9zpVpNpU%3D'
                          contentLength: 11813331
                          createdat: '2023-02-24T16:19:35.000Z'
                          updatedat: '2023-02-24T16:19:35.000Z'
                          processing: true
                items:
                  type: object
                  properties:
                    raw:
                      type: object
                      required:
                        - name
                        - url
                        - contentLength
                        - createdat
                        - updatedat
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                        contentLength:
                          type: integer
                        createdat:
                          type: string
                        updatedat:
                          type: string
                        error:
                          type: string
                    datasets:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          url:
                            type: string
                          contentLength:
                            type: integer
                          createdat:
                            type: string
                          updatedat:
                            type: string
                          processing:
                            type: boolean
                        required:
                          - name
                          - url
                          - contentLength
                          - createdat
                          - updatedat
                          - processing
                  required:
                    - raw
              examples:
                Example:
                  value:
                    - raw:
                        name: string
                        url: string
                        contentLength: 0
                        createdat: string
                        updatedat: string
                        error: string
                      datasets:
                        - name: string
                          url: string
                          contentLength: 0
                          createdat: string
                          updatedat: string
                          processing: true
      operationId: get-datasets-ingesting
      description: |-
        This endpoint is going to scan data upload folder for login user to check the status of ingesting datasets.Authentication is required prior to using this API.

        URLs will be attached SAS token (1 hour expiry period)

        User's upload folder structure will be like this.

        - userdata
          - a85516c81c0b78d3e89d3f00099b8b15 (md5 hash key generated from email)
            - raw
              - aaa_yyyymmddhhmmss.tif - original data
              - aaa_yyyymmddhhmmss.tif.error - in case data processing failed. Logs for data processing should be contained in .error file 
            - datasets
              - aaa_yyyymmddhhmmss.tif - subfolder
                - aaa_yyyymmddhhmmss.tif - processed data
                - aaa_yyyymmddhhmmss.tif.ingesting - processing end, but unpublished
      security:
        - Azure AD authentication: []
        - API access token: []
      parameters:
        - schema:
            type: string
            default: createdat
            enum:
              - name
              - contentLength
              - createdat
              - updatedat
          in: query
          name: sortby
          description: Sorting column
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: sortorder
          description: Sorting order either 'asc' or 'desc'
  /datasets/stats:
    get:
      summary: Get statistics for published datasets
      tags:
        - datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    stats:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
              examples:
                Example:
                  value:
                    - stat: '4384'
                      title: Public datasets
                      description: The number of public datasets
                    - stat: '91'
                      title: Country datasets
                      description: The number of public datasets linked to at least a country
                    - stat: '4164'
                      title: Global datasets
                      description: The number of public global datasets
                    - stat: '4337'
                      title: SDG datasets
                      description: The number of public datasets linked to at least a SDG
                    - stat: '27'
                      title: Countries
                      description: The number of countries having GeoHub datasets
      operationId: get-datasets-stats
      description: This endpoint is to get statistics for published datasets
  /style/count:
    get:
      summary: Get total count of styles
      tags:
        - style
      responses: {}
      operationId: get-style-count
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                count:
                  type: integer
            examples:
              Example 1:
                value:
                  count: 6
  /style:
    get:
      summary: Style list API
      tags:
        - style
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  styles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        createdat:
                          type: string
                        name:
                          type: string
                        updatedat:
                          type: string
                        access_level:
                          type: integer
                          default: 1
                          description: '1: login user, 2: UNDP, 3: public'
                        created_user:
                          type: string
                        updated_user:
                          type: string
                        no_stars:
                          type: integer
                        is_star:
                          type: boolean
                        links:
                          type: array
                          items:
                            $ref: '#/components/schemas/Link'
                      required:
                        - id
                        - createdat
                        - name
                        - updatedat
                        - access_level
                        - links
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/Link'
                  pages:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                      totalPages:
                        type: integer
                      currentPage:
                        type: integer
                required:
                  - styles
                  - links
              examples:
                Example:
                  value:
                    styles:
                      - id: 201
                        name: Cross Blended Hypso with Shaded Relief and Water
                        access_level: 1
                        createdat: '2023-03-20T18:58:13.443Z'
                        created_user: jin.igarashi@undp.org
                        updatedat: '2023-03-20T18:58:13.443Z'
                        updated_user: null
                        no_stars: 5
                        is_star: true
                        links:
                          - rel: root
                            type: application/json
                            href: 'http://localhost:5173/api/style'
                          - rel: self
                            type: application/json
                            href: 'http://localhost:5173/api/style/201'
                          - rel: map
                            type: application/json
                            href: 'http://localhost:5173/map/201'
                          - rel: stylejson
                            type: application/json
                            href: 'http://localhost:5173/api/style/201.json'
                    links:
                      - rel: root
                        type: application/json
                        href: 'http://localhost:5173/api/style'
                      - rel: self
                        type: application/json
                        href: 'http://localhost:5173/api/style?limit=1'
                      - rel: next
                        type: application/json
                        href: 'http://localhost:5173/api/style?limit=1&offset=1'
                    pages:
                      totalCount: 9
                      totalPages: 9
                      currentPage: 1
      operationId: get-style
      description: Get the list of saved style from PostGIS database
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: string
          in: query
          name: sortby
          description: "sorting column and sorting order. e.g., 'updatedat, desc'. if asc or desc is skipped, asc will be used."
        - schema:
            type: string
          in: query
          name: query
          description: text to search styles by name
        - schema:
            type: integer
            default: 1
            enum:
              - 1
              - 2
              - 3
          in: query
          name: accesslevel
          description: 'access Level published to 1: login user 2: UNDP 3: public'
        - schema:
            type: boolean
          in: query
          name: staronly
          description: 'if true, only search for favourite datasets'
      security:
        - Azure AD authentication: []
        - API access token: []
    post:
      summary: Style register API
      operationId: post-style
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  viewer:
                    type: string
                    description: URL for style sharing viewer
                  style:
                    type: string
                    description: style.json URL
                required:
                  - viewer
                  - style
      description: Save style.json to PostgreSQL database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name for style
                style:
                  type: object
                  description: style.json object
                layers:
                  type: array
                  description: $layerList object
                  items:
                    type: object
                access_level:
                  type: integer
                  enum:
                    - 1
                    - 2
                    - 3
                  description: '1: login user, 2: UNDP, 3: public'
              required:
                - name
                - style
                - layers
                - access_level
      tags:
        - style
      security:
        - Azure AD authentication: []
        - API access token: []
    put:
      summary: Style update API
      operationId: put-style
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  viewer:
                    type: string
                    description: URL for viewer
                  style:
                    type: string
                    description: style.json URL
                required:
                  - id
                  - viewer
                  - style
      description: Update style.json to PostgreSQL database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: style id to update
                name:
                  type: string
                  description: name for saved style
                styles:
                  type: object
                  description: style.json object
                layers:
                  type: array
                  description: $layerList object
                  items:
                    type: object
                access_level:
                  type: integer
                  description: '1: login user, 2: UNDP, 3: public'
              required:
                - id
                - name
                - styles
                - layers
                - access_level
      tags:
        - style
      security:
        - Azure AD authentication: []
        - API access token: []
  '/style/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: style ID
    delete:
      summary: Style delete API
      operationId: delete-style-id
      responses:
        '204':
          description: No Content
      description: Delete style by ID
      tags:
        - style
      security:
        - Azure AD authentication: []
        - API access token: []
    get:
      summary: Style info API
      operationId: get-style-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  style:
                    type: object
                  layers:
                    type: array
                    items:
                      type: object
                  createdat:
                    type: string
                  updatedat:
                    type: string
                  access_level:
                    type: integer
                    description: '1: login user, 2: UNDP, 3: public'
                  created_user:
                    type: string
                  updated_user:
                    type: string
                  is_star:
                    type: boolean
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/Link'
                required:
                  - id
                  - name
                  - style
                  - layers
                  - createdat
                  - updatedat
                  - access_level
                  - links
      description: get style information by style id
      tags:
        - style
      security:
        - Azure AD authentication: []
        - API access token: []
  '/style/{id}.json':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: style ID
    get:
      summary: Style JSON api
      tags:
        - style
      responses:
        '200':
          description: style.json object
      operationId: get-style-id-.json
      description: get style.json by ID
      security:
        - Azure AD authentication: []
        - API access token: []
      parameters:
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: exclude
          description: 'If true, exclude basemap layers from style.json'
  '/style/{id}/permission':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Style ID
    get:
      summary: Get user permission info for a style
      tags:
        - style
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StylePermission'
      operationId: get-style-id-permission
      description: Get permission info for a style
      security:
        - Azure AD authentication: []
        - API access token: []
    post:
      summary: Register user permission for a style
      operationId: post-style-id-permission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StyletPermission'
      description: |
        Register user permission for a style

        - only users with owner/write/read permission can register.
        - users with write permission cannot register owner permission to a user.
        - users with read permission can register read permission to a user.
      tags:
        - style
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StylePermission'
        description: ''
      security:
        - Azure AD authentication: []
        - API access token: []
    put:
      summary: Update user permission for a style
      operationId: put-style-id-permission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StylePermission'
      description: |-
        Update user permission for a style

        - signed user cannot update their own permission
        - only users with owner/write/read permission can update.
        - users with write permission cannot update owner permission to a user.
        - users with read permission cannot update owner/write permission to a user.
      security:
        - Azure AD authentication: []
        - API access token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StylePermission'
      tags:
        - style
    delete:
      summary: Delete user permission for a style
      operationId: delete-style-id-permission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StylePermission'
      description: |-
        Delete user permission for a style

        - cannot delete signed in user themselves
        - only users with owner/write/read permission can delete.
        - users with write permission cannot delete owner.
        - users with read permission cannot delete owner/write
        - if only a user is registered, cannot delete user. at least a user needs to be registered
      security:
        - Azure AD authentication: []
        - API access token: []
      tags:
        - style
      parameters:
        - schema:
            type: string
          in: query
          name: user_email
          description: user email address
          required: true
  '/style/{id}/star':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Register style to favourite
      operationId: post-style-id-star
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  style_id:
                    type: integer
                  no_stars:
                    type: integer
                required:
                  - style_id
                  - no_stars
      description: |-
        Register style to favourite
        This API only can be used when user sign in.
      security:
        - Azure AD authentication: []
        - API access token: []
      tags:
        - style
    delete:
      summary: Delete style from favourite
      operationId: delete-style-id-star
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  style_id:
                    type: integer
                  no_stars:
                    type: integer
                required:
                  - style_id
                  - no_stars
      description: |-
        Delete style from favourite
        This API only can be used when user sign in.
      security:
        - Azure AD authentication: []
        - API access token: []
      tags:
        - style
  '/style/{id}/star/count':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get star count for a style
      tags:
        - style
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  style_id:
                    type: integer
                  no_stars:
                    type: integer
                required:
                  - style_id
                  - no_stars
      operationId: get-style-id-star-count
      description: get the number of stars for a dataset
      security:
        - Azure AD authentication: []
        - API access token: []
  '/style/{id}/static/auto/{width}x{height}.{format}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: style id
      - $ref: '#/components/parameters/width'
      - $ref: '#/components/parameters/height'
      - $ref: '#/components/parameters/format'
    get:
      summary: Static image with default location
      tags:
        - style
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
                properties: {}
      operationId: get-style-id-static-auto-width-x-height-.png
      description: Get static image with default position of style.json
      parameters:
        - $ref: '#/components/parameters/ratio'
  '/style/{id}/static/{bbox}/{width}x{height}.{format}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: style ID
      - $ref: '#/components/parameters/bbox'
      - $ref: '#/components/parameters/width'
      - $ref: '#/components/parameters/height'
      - $ref: '#/components/parameters/format'
    get:
      summary: Static image by BBOX
      tags:
        - style
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
                properties: {}
        '':
          description: ''
      operationId: get-style-id-static-bbox-width-x-height-.png
      description: Get static image by specified BBOX
      parameters:
        - $ref: '#/components/parameters/ratio'
  '/style/{id}/static/{lon},{lat},{zoom},{bearing},{pitch}/{width}x{height}.{format}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: style id
      - $ref: '#/components/parameters/lon'
      - $ref: '#/components/parameters/lat'
      - $ref: '#/components/parameters/zoom'
      - $ref: '#/components/parameters/bearing'
      - $ref: '#/components/parameters/pitch'
      - $ref: '#/components/parameters/width'
      - $ref: '#/components/parameters/height'
      - $ref: '#/components/parameters/format'
    get:
      summary: Static image by center and zoom
      tags:
        - style
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
                properties: {}
      operationId: 'get-style-id-static-lon-,-lat-,-zoom-,-bearing-,-pitch-width-x-height-.png'
      description: 'get static image by center and zoom, and bearing and pitch optionally'
      parameters:
        - $ref: '#/components/parameters/ratio'
  /stac:
    get:
      summary: get supported STAC API/Catalog list
      tags:
        - stac
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stac'
      operationId: get-stac
      description: get supported STAC API/Catalog List
      parameters:
        - schema:
            type: string
            enum:
              - api
              - catalog
          in: query
          name: type
          description: STAC type either 'api' or 'catalog'
    post:
      summary: Register STAC catalog/api
      operationId: post-stac
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stac'
      tags:
        - stac
      description: |-
        **ONLY ALLOW SUPERUSER TO USE THIS API**

        Register STAC catalog/api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stac'
        description: ''
      security:
        - Azure AD authentication: []
        - API access token: []
  '/stac/{id}':
    get:
      summary: get STAC API/Catalog info by ID
      operationId: get-stac-type
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stac'
      description: get STAC API/Catalog info by ID
      tags:
        - stac
    put:
      summary: Update STAC API/Catalog
      operationId: put-stac-type
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stac'
      tags:
        - stac
      description: |-
        **ONLY ALLOW SUPERUSER TO USE THIS API**

        Update STAC API/Catalog
      security:
        - Azure AD authentication: []
        - API access token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stac'
    delete:
      summary: Delete STAC API/Catalog from GeoHub
      operationId: delete-stac-type
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - stac
      description: |-
        **ONLY ALLOW SUPERUSER TO USE THIS API**

        Delete a STAC a API/Catalog from GeoHub
      security:
        - Azure AD authentication: []
        - API access token: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: STAC server ID
  '/stac/{id}/{collection}/{...item}/{asset}':
    parameters:
      - schema:
          type: string
          enum:
            - microsoft-pc
            - earth-search
        name: id
        in: path
        required: true
        description: STAC server ID
      - schema:
          type: string
          example: sentinel-2-l2a
        name: collection
        in: path
        required: true
        description: STAC collection ID
      - schema:
          example: S2A_MSIL2A_20231010T203931_R028_T05LMC_20231010T233454
        name: ...item
        in: path
        required: true
        description: 'STAC item ID. To merge items as mosaic, you can put multiple item IDs by separating slash'
      - schema:
          type: string
          example: visual
        name: asset
        in: path
        required: true
        description: STAC Asset name for the item you want to use
    get:
      summary: Get STAC item information for GeoHub
      tags:
        - stac
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoJSONFeature'
      operationId: get-stac-type-collection-...item-asset
      description: |-
        This endpoint is to generate GeoJSON Feature object of user selected STAC items with all necessary information to be rendered in GeoHub.

        For instance, the following example URL is to request the server to return the GeoJSON Feature object for only a single item COG (`S2A_MSIL2A_20231010T203931_R028_T05LMC_20231010T233454`) from `sentinel-2-l2a` in Miscrosoft Planetary Computer.

        /api/stac/microsoft-pc/sentinel-2-l2a/S2A_MSIL2A_20231010T203931_R028_T05LMC_20231010T233454/visual

        If user want to merge several items to a mosaic, you can simply list item IDs in `...item` section by using slash as follows.

        /api/stac/microsoft-pc/sentinel-2-l2a/S2A_MSIL2A_20231010T203931_R028_T05LMC_20231010T233454/S2A_MSIL2A_20231010T203931_R028_T05LLC_20231010T233519/visual

        This mean the server create mosaicjson for item ID `S2A_MSIL2A_20231010T203931_R028_T05LMC_20231010T233454` and `S2A_MSIL2A_20231010T203931_R028_T05LLC_20231010T233519` for the client.

        For STAC datasets, the following tags will be included in the object.

        - type=`stac`
        - stacType=`cog` or `mosaicjson`
        - stac=stac ID. either `microsoft-pc` or `earth-search`
        - collection=collection ID
        - item=Item ID. There might be multiple tags for item
        - asset=asset name for item
        - provider=data provider name. There might be multiple tags for this.
  '/stac/style/{id}/{collection}/{...item}/{asset}':
    parameters:
      - schema:
          type: string
          enum:
            - microsoft-pc
            - earth-search
        name: id
        in: path
        required: true
        description: STAC server ID
      - schema:
          type: string
          example: sentinel-2-l2a
        name: collection
        in: path
        required: true
        description: STAC collection ID
      - schema:
          example: S2A_MSIL2A_20231010T203931_R028_T05LMC_20231010T233454
        name: ...item
        in: path
        required: true
        description: 'STAC item ID. To merge items as mosaic, you can put multiple item IDs by separating slash'
      - schema:
          type: string
          example: visual
        name: asset
        in: path
        required: true
        description: STAC Asset name for the item you want to use
    get:
      summary: Get default layer style for STAC item
      tags:
        - stac
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetLayerStyle'
      operationId: get-stac-type-collection-...item-asset
      description: |-
        This endpoint is to generate default layer style of user selected STAC items with all necessary information to be rendered in GeoHub.

        The response from this endpoint can be compatible with `/api/datasets/{id}/style/{layer}/{type}` endpoint.
      parameters:
        - schema:
            type: string
          in: query
          name: colormap_name
          description: 'Option. If specified, use this colormap to create layer style'
  '/stac/catalog/{id}/item':
    parameters:
      - schema:
          type: string
          enum:
            - maxar-opendata
            - capella-open-data
            - jaxa
            - nz-imagery
        name: id
        in: path
        required: true
        description: STAC server ID
    get:
      summary: Get STAC catalog item information for GeoHub
      tags:
        - stac
      responses: {}
      operationId: get-stac-catalog-id-item
      parameters:
        - schema:
            type: string
            example: 'https://maxar-opendata.s3.amazonaws.com/events/southafrica-flooding22/ard/36/213131032130/2022-04-20/105001002B445D00.json'
          in: query
          name: url
          required: true
          description: URL for STAC item.
        - schema:
            type: string
            example: visual
          in: query
          name: asset
          description: Asset name selected
          required: true
        - schema:
            type: string
            example: 'https://maxar-opendata.s3.amazonaws.com/events/southafrica-flooding22/collection.json'
          in: query
          name: collection
          description: 'URL for top-level collection. STAC catalog has nested structure and may have multiple collections until reaching item level. To create more comprehensive information for GeoHub, it required a URL for top-level collection.'
          required: true
      description: |-
        This endpoint is to create a feature JSON object for selected STAC item asset. This endpoint only can work for catalog type of STAC. STAC API item should use other endpoint of `/stac/{type}/{collection}/{...item}/{asset}.

        If multiple `url`s are specified, the endpoint will create a mosaicjson feature.
  /tags:
    get:
      summary: Tag search API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                Example for tags?key=extent:
                  value:
                    extent:
                      - key: extent
                        value: Afghanistan
                        count: 2
                      - key: extent
                        value: Africa
                        count: 5
                      - key: extent
                        value: America
                        count: 1
                      - key: extent
                        value: Asia
                        count: 5
                      - key: extent
                        value: Burundi
                        count: 3
                      - key: extent
                        value: Cambodia
                        count: 2
                      - key: extent
                        value: Conflict areas
                        count: 1
                      - key: extent
                        value: Ethiopia
                        count: 3
                      - key: extent
                        value: EU
                        count: 3
                      - key: extent
                        value: Europe
                        count: 9
                      - key: extent
                        value: Ghana
                        count: 2
                      - key: extent
                        value: Global
                        count: 3845
                      - key: extent
                        value: Greenland and Antarctica
                        count: 1
                      - key: extent
                        value: India
                        count: 2
                      - key: extent
                        value: Kenya
                        count: 10
                      - key: extent
                        value: Madagascar
                        count: 2
                      - key: extent
                        value: Malawi
                        count: 4
                      - key: extent
                        value: Mali
                        count: 2
                      - key: extent
                        value: Mozambique
                        count: 2
                      - key: extent
                        value: Nepal
                        count: 2
                      - key: extent
                        value: Nigeria
                        count: 12
                      - key: extent
                        value: North America
                        count: 1
                      - key: extent
                        value: Oceania
                        count: 1
                      - key: extent
                        value: OECD
                        count: 7
                      - key: extent
                        value: Pakistan
                        count: 6
                      - key: extent
                        value: Rwanda
                        count: 6
                      - key: extent
                        value: South America
                        count: 1
                      - key: extent
                        value: SouthEast Asia
                        count: 2
                      - key: extent
                        value: Tanzania
                        count: 8
                      - key: extent
                        value: Uganda
                        count: 10
                      - key: extent
                        value: West Africa
                        count: 1
                      - key: extent
                        value: Zambia
                        count: 2
      operationId: get-tags
      description: 'This API can return the list of available tags. If you simply query by /tags, it returns all tags. You can also filter a key value to list available tags.'
      parameters:
        - schema:
            type: string
            enum:
              - extent
              - granularity
              - keyword
              - layertype
              - resolution
              - schema
              - sdg_goal
              - sdg_target
              - stac
              - theme
              - type
              - year
          in: query
          name: key
          description: Optional parameter to filter by key
      tags:
        - tags
  /vector/statistics:
    get:
      summary: Vector tile statistics API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  layer:
                    type: string
                  geometry:
                    type: string
                  count:
                    type: number
                  attributeCount:
                    type: number
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        attribute:
                          type: string
                        type:
                          type: string
                        count:
                          type: number
                        min:
                          type: number
                        max:
                          type: number
                        mean:
                          type: number
                        median:
                          type: number
                        std:
                          type: number
                        histogram:
                          type: object
                          properties:
                            count:
                              type: array
                              items:
                                type: number
                            bins:
                              type: array
                              items:
                                type: number
              examples:
                Example for zambia.poverty:
                  value:
                    layer: zambia.poverty
                    geometry: Polygon
                    count: 145
                    attributeCount: 7
                    attributes:
                      - attribute: poverty
                        type: number
                        count: 145
                        min: 0.1
                        max: 0.96
                        mean: 0.6919310344827585
                        median: 0.78
                        std: 0.21315518783181625
                        histogram:
                          count:
                            - 9
                            - 19
                            - 10
                            - 36
                            - 71
                          bins:
                            - 0.1
                            - 0.272
                            - 0.444
                            - 0.616
                            - 0.788
                            - 0.96
                Example for zambia.poverty_selector:
                  value:
                    layer: zambia.poverty_selector
                    geometry: Polygon
                    count: 5
                    attributeCount: 1
                    attributes:
                      - attribute: district
                        type: string
                        count: 5
                        values:
                          - Chilubi
                          - Kasama
                          - Luwingu
                          - Chinsali
                          - Mpika
      operationId: get-vector-statistics
      description: This api it to calculate statistics for vector tiles from /0/0/0.pbf
      parameters:
        - schema:
            type: string
            example: 'https://martin.undpgeohub.org/zambia.poverty/0/0/0.pbf'
          in: query
          name: path
          description: URL for vector tile. must be /0/0/0.pbf path
          required: true
        - schema:
            type: string
            example: zambia.poverty
          in: query
          name: layer_name
          description: layer name for vector tile
          required: true
      tags:
        - vector tile
  '/vector/{source}/metadata.json':
    get:
      summary: Vector tile metadata.json API
      responses: {}
      operationId: 'get-vector-[source]-metadata.json'
      description: |-
        This api is to generate metadata.json for vector tiles.

        return metadata.json v1.3.0 (https://github.com/mapbox/mbtiles-spec/blob/master/1.3/spec.md)
      parameters:
        - schema:
            type: string
            example: zambia.poverty
          in: query
          name: table
          description: table name. only available for source = martin or pgtileserv
        - schema:
            type: string
            enum:
              - table
              - function
          in: query
          name: type
          description: type name. only available for source = pgtileserv
        - schema:
            type: string
          in: query
          name: pbfpath
          description: pbf path. only available for soruce = azstorage
      tags:
        - vector tile
    parameters:
      - schema:
          type: string
          enum:
            - azstorage
            - pgtileserv
            - martin
        name: source
        in: path
        required: true
        description: source type
  '/vector/{source}/tile.json':
    parameters:
      - schema:
          type: string
          enum:
            - pgtileserv
            - martin
        name: source
        in: path
        required: true
        description: source type
    get:
      summary: Vector tile tile.json API
      responses: {}
      operationId: get-vector-source-tile.json
      description: |-
        This api is to generate tile.json for vector tiles.

        return TileJSON v3.0.0 (https://github.com/mapbox/tilejson-spec/tree/master/3.0.0)
      parameters:
        - schema:
            type: string
            example: zambia.poverty
          in: query
          name: table
          description: table name. only available for source = martin or pgtileserv
          required: true
        - schema:
            type: string
            enum:
              - table
              - function
          in: query
          name: type
          description: type name. only available for source = pgtileserv
      tags:
        - vector tile
  /settings:
    get:
      summary: GeoHub User Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  classification_method:
                    $ref: '#/components/schemas/ClassificationMethodTypes'
                  raster_resampling_method:
                    $ref: '#/components/schemas/ResamplingMethodTypes'
                  layer_opacity:
                    type: number
                  overlap_priority:
                    $ref: '#/components/schemas/OverlapPriority'
                  icon_size:
                    type: number
                  icon_image:
                    type: string
                  line_pattern:
                    $ref: '#/components/schemas/LinePattern'
                  font_size:
                    type: number
                  halo_width:
                    type: number
                  search_limit:
                    type: number
                  dataset_search_limit:
                    type: number
                  dataset_search_query_operator:
                    $ref: '#/components/schemas/QueryOperator'
                  dataset_sorting_column:
                    type: string
                  datapage_sorting_column:
                    type: string
                  tag_search_operator:
                    $ref: '#/components/schemas/TagSearchOperator'
                  map_page_sorting_column:
                    type: string
                  line_width:
                    type: number
                  number_of_classes:
                    type: number
                  sidebar_position:
                    $ref: '#/components/schemas/SidebarPosition'
      security:
        - Azure AD authentication: []
        - API access token: []
      tags:
        - GeoHub User Settings
    post:
      summary: Update GeoHub User Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  classification_method:
                    $ref: '#/components/schemas/ClassificationMethodTypes'
                  raster_resampling_method:
                    $ref: '#/components/schemas/ResamplingMethodTypes'
                  layer_opacity:
                    type: number
                  overlap_priority:
                    $ref: '#/components/schemas/OverlapPriority'
                  icon_size:
                    type: number
                  icon_image:
                    type: string
                  line_pattern:
                    $ref: '#/components/schemas/LinePattern'
                  font_size:
                    type: number
                  halo_width:
                    type: number
                  search_limit:
                    type: number
                  dataset_search_limit:
                    type: number
                  dataset_search_query_operator:
                    $ref: '#/components/schemas/QueryOperator'
                  dataset_sorting_column:
                    type: string
                  datapage_sorting_column:
                    type: string
                  tag_search_operator:
                    $ref: '#/components/schemas/TagSearchOperator'
                  map_page_sorting_column:
                    type: string
                  line_width:
                    type: number
                  number_of_classes:
                    type: number
                  sidebar_position:
                    $ref: '#/components/schemas/SidebarPosition'
      security:
        - Azure AD authentication: []
        - API access token: []
      description: Update GeoHub User Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                classification_method:
                  $ref: '#/components/schemas/ClassificationMethodTypes'
                raster_resampling_method:
                  $ref: '#/components/schemas/ResamplingMethodTypes'
                layer_opacity:
                  type: number
                overlap_priority:
                  $ref: '#/components/schemas/OverlapPriority'
                icon_size:
                  type: number
                icon_image:
                  type: string
                line_pattern:
                  $ref: '#/components/schemas/LinePattern'
                font_size:
                  type: number
                halo_width:
                  type: number
                search_limit:
                  type: number
                dataset_search_limit:
                  type: number
                dataset_search_query_operator:
                  $ref: '#/components/schemas/QueryOperator'
                dataset_sorting_column:
                  type: string
                datapage_sorting_column:
                  type: string
                tag_search_operator:
                  $ref: '#/components/schemas/TagSearchOperator'
                map_page_sorting_column:
                  type: string
                line_width:
                  type: number
                number_of_classes:
                  type: number
                sidebar_position:
                  $ref: '#/components/schemas/SidebarPosition'
        description: Update GeoHub User Settings
        required: true
      tags:
        - GeoHub User Settings
  /swagger/spec.json:
    get:
      summary: Get open API JSON definition
      responses: {}
      operationId: get-swagger-spec.json
      description: Get open API JSON definition
      tags:
        - swagger
  /continents:
    get:
      summary: Get continents
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    continent_code:
                      type: number
                    continent_name:
                      type: string
                  required:
                    - continent_code
                    - continent_name
              examples:
                Example 1:
                  value:
                    - continent_code: 2
                      continent_name: Africa
                    - continent_code: 19
                      continent_name: Americas
                    - continent_code: 0
                      continent_name: Antarctica
                    - continent_code: 142
                      continent_name: Asia
                    - continent_code: 150
                      continent_name: Europe
                    - continent_code: 9
                      continent_name: Oceania
      operationId: get-continents
      description: Get continents data from database
      parameters:
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: filterbytag
          description: 'If true, only returns regions which exist in tag table'
  /regions:
    get:
      summary: Get regions
      tags:
        - admin
      responses: {}
      operationId: get-regions
      description: get regions data from database
      parameters:
        - schema:
            type: number
          in: query
          name: continent
          description: continent_code
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: filterbytag
          description: 'If true, only returns regions which exist in tag table'
  /countries:
    get:
      summary: Get countries
      tags:
        - admin
      responses: {}
      operationId: get-countries
      description: get countries data from database
      parameters:
        - schema:
            type: string
          in: query
          name: continent
          description: continent code to filter
        - schema:
            type: string
          in: query
          name: region
          description: region code to filter
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: filterbytag
          description: 'If true, only returns regions which exist in tag table'
  /menu:
    get:
      summary: Get menu items for data searching navigation
      tags:
        - menu
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    x-stoplight:
                      id: 5a16x4lay99wc
                    items:
                      x-stoplight:
                        id: 6u7zsyyuv7sjs
                      type: object
                      properties:
                        name:
                          type: string
                          x-stoplight:
                            id: 7fvs2ayvf2df8
                        icon:
                          type: string
                          x-stoplight:
                            id: ed6j9udfpnppd
                        url:
                          type: string
                          x-stoplight:
                            id: 2irxui12n8nk2
              examples:
                Example Home:
                  value:
                    items:
                      - name: SDG
                        icon: /assets/sdgs/SDG Wheel_WEB.png
                        url: /api/tags?key=sdg_goal
                      - name: Continent
                        icon: fa-solid fa-globe
                        url: /api/continents?filterbytag=true
                      - name: UNDP
                        icon: /assets/undp-images/undp-logo-blue.svg
                        url: /api/datasets?provider=undp
                      - name: UNICEF
                        icon: /assets/unicef.png
                        url: /api/datasets?provider=unicef
                      - name: UNEP
                        icon: /assets/unep.png
                        url: /api/datasets?provider=unep
                      - name: FAO
                        icon: /assets/fao.svg
                        url: /api/datasets?provider=fao
                      - name: Satellite imagery
                        icon: fa-solid fa-satellite
                        url: /api/datasets?type=stac
                      - name: Dynamic vector data
                        icon: /assets/postgresql.png
                        url: /api/datasets?type=pgtileserv
                      - name: Favourite
                        icon: /assets/star.png
                        url: /api/datasets?staronly=true
                      - name: My data
                        icon: fa-solid fa-circle-user
                        url: /api/datasets?mydata=true
      operationId: get-menu
      description: Get menu items for data tab at maps page according to the current breadcrumbs setting. The reponse maybe will be different if users do not sign in.
      parameters:
        - schema:
            type: string
            example: 'Home,SDG'
          in: query
          name: breadcrumbs
          description: "current breadcrumbs setting. It should be specified by using comma for multiple breadcrumbs name. For example, 'Home', 'Home,SDG' etc."
          required: true
  /token:
    get:
      summary: Generate an access token for API
      responses: {}
      operationId: get-token
      description: |
        Generate an access token for GeoHub APIs. The permission of a token issued will follow the user's permission who issues. This token is only valid within `/api` endpoints. Pages have to be authenticated with SSO through authentication providers.

        Only approved users can specify expiration time with `duration` query param. Otherwise, a token will be expired in an hour as default.

        Regarding to the format of expiration time, please follow the below formats.

        Format used for time span should be a number followed by a unit, such as `5 minutes` or `1 day`.

        Valid units are: 
        - `sec`, `secs`, `second`, `seconds`, `s`
        - `minute`, `minutes`, `min`, `mins`, `m`, 
        - `hour`, `hours`, `hr`, `hrs`, `h`, 
        - `day`, `days`, `d`, 
        - `week`, `weeks`, `w`, 
        - `year`, `years`, `yr`, `yrs`, `y`. 

        It is not possible to specify months. 365.25 days is used as an alias for a year.
      security:
        - Azure AD authentication: []
        - API access token: []
      parameters:
        - schema:
            type: string
          in: query
          name: duration
          description: 'The duration, that the token will be valid. Only valid for approved users.'
      tags:
        - token
components:
  schemas:
    Tag:
      title: Tag
      x-stoplight:
        id: um38sy7bphx89
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        count:
          type: number
      required:
        - key
        - value
    QueryOperator:
      title: QueryOperator
      type: string
      enum:
        - and
        - or
    TagSearchOperator:
      title: TagSearchOperator
      type: string
      enum:
        - and
        - or
    SidebarPosition:
      title: SidebarPosition
      type: string
      enum:
        - left
        - right
    ClassificationMethodTypes:
      title: ClassificationMethodTypes
      type: string
      enum:
        - e
        - q
        - 'n'
        - l
    ResamplingMethodTypes:
      title: ResamplingMethodTypes
      type: string
      enum:
        - nearest
        - linear
    OverlapPriority:
      title: OverlapPriority
      type: string
      enum:
        - always
        - never
        - cooperative
    LinePattern:
      title: LinePattern
      type: string
      enum:
        - solid
        - dash
        - dash-dot
        - dot
    Link:
      title: Link
      x-stoplight:
        id: 758pae8gfhqq8
      type: object
      properties:
        rel:
          type: string
        type:
          type: string
        href:
          type: string
    GeoJSONFeature:
      type: object
      x-examples: {}
      description: GeoJSON feature object for GeoHub
      properties:
        type:
          type: string
        geometry:
          type: object
          properties:
            type:
              type: string
            coordinates:
              type: array
              items:
                type: number
        properties:
          type: object
          properties:
            id:
              type: string
            url:
              type: string
            name:
              type: string
            description:
              type: string
            is_raster:
              type: boolean
            license:
              type: string
            access_level:
              type: integer
            createdat:
              type: string
            created_user:
              type: string
            updatedat:
              type: string
            updated_user:
              type: string
            tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            no_stars:
              type: integer
            permission:
              type: integer
            is_star:
              type: boolean
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
    GeoJSONFeatureCollection:
      type: object
      x-examples: {}
      description: GeoJSON FeatureCollection object for GeoHub
      properties:
        type:
          type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/GeoJSONFeature'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        pages:
          type: object
          properties:
            totalCount:
              type: integer
            totalPages:
              type: integer
            currentPage:
              type: integer
    DatasetLayerStyle:
      title: DatasetLayerStyle
      x-stoplight:
        id: 3edd696171c73
      type: object
      description: Dataset style definition
      x-examples: {}
      properties:
        dataset_id:
          type: string
          description: dataset ID
        layer_id:
          type: string
        layer_type:
          type: string
          description: 'Layer type. fill, line, symbol, circle, heatmap, raster'
        source:
          type: object
          description: Maplibre source object
        style:
          type: object
          description: Maplibre layer style object
        colormap_name:
          type: string
          description: Colormap name if applicable
        classification_method:
          type: string
          description: Classification method if applicable
        classification_method_2:
          type: string
          x-stoplight:
            id: s5ozu37b48b7z
          description: 'classification method if there are two classification settings (icon size, line width) apart from color.'
        createdat:
          type: string
        created_user:
          type: string
        updatedat:
          type: string
        updated_user:
          type: string
      required:
        - dataset_id
        - layer_id
        - layer_type
        - source
        - style
        - createdat
        - created_user
    stac:
      title: stac
      x-stoplight:
        id: 51hxmfzs5mtju
      type: object
      description: STAC API/Catalog object
      x-examples:
        API:
          id: microsoft-pc
          name: Microsoft Planetary Computer
          url: 'https://planetarycomputer.microsoft.com/api/stac/v1'
          type: api
        Catalog:
          id: maxar-opendata
          name: Maxar Open Data
          url: 'https://maxar-opendata.s3.amazonaws.com/events/catalog.json'
          type: catalog
          providers:
            - Maxar Technologies
      properties:
        id:
          type: string
          description: STAC ID
        name:
          type: string
          x-stoplight:
            id: v1jc6kp2gikli
          description: STAC name
        url:
          type: string
          x-stoplight:
            id: eyl8a37kvp6ga
          description: API URL or catalog.json URL
        type:
          type: string
          x-stoplight:
            id: uaal8dmp1wuao
          description: either 'api' or 'catalog'
        providers:
          type: array
          x-stoplight:
            id: ape451kvnptqq
          description: list of provider names
          items:
            x-stoplight:
              id: olhqv5auy83ir
            type: string
        createdat:
          type: string
          x-stoplight:
            id: 124oktg1ynf9h
        created_user:
          type: string
          x-stoplight:
            id: a1bmx85anum4o
        updatedat:
          type: string
          x-stoplight:
            id: 2dgcrqaraoc0k
        updated_user:
          type: string
          x-stoplight:
            id: hscqetpry1rqr
      required:
        - id
        - name
        - url
        - type
        - createdat
        - created_user
    DatasetPermission:
      title: DatasetPermission
      x-stoplight:
        id: tf5ucos0vyjya
      type: object
      description: dataset_permission object
      properties:
        dataset_id:
          type: string
          x-stoplight:
            id: mz668x3itjbvu
          description: Dataset ID
        user_email:
          type: string
          x-stoplight:
            id: 2izccegifhkpo
          description: user email address
        permission:
          type: integer
          x-stoplight:
            id: yh1r1srllglod
          description: 'Permission. 1: Read, 2: Read/Write, 3: Owner'
        createdat:
          type: string
          x-stoplight:
            id: 4fp196ywfwz0l
          description: created datetime
        updatedat:
          type: string
          x-stoplight:
            id: bu54y520xfxuw
          description: updated datetime
      required:
        - dataset_id
        - user_email
        - permission
    StylePermission:
      title: StylePermission
      x-stoplight:
        id: kgp2trp23qwfj
      type: object
      description: style_permission object
      properties:
        style_id:
          type: string
          x-stoplight:
            id: mz668x3itjbvu
          description: Style ID
        user_email:
          type: string
          x-stoplight:
            id: 2izccegifhkpo
          description: user email address
        permission:
          type: integer
          x-stoplight:
            id: yh1r1srllglod
          description: 'Permission. 1: Read, 2: Read/Write, 3: Owner'
        createdat:
          type: string
          x-stoplight:
            id: 4fp196ywfwz0l
          description: created datetime
        updatedat:
          type: string
          x-stoplight:
            id: bu54y520xfxuw
          description: updated datetime
      required:
        - dataset_id
        - user_email
        - permission
  parameters:
    lon:
      name: lon
      in: path
      required: true
      schema:
        type: number
        default: 0
      description: longitude
    lat:
      name: lat
      in: path
      required: true
      schema:
        type: number
        default: 0
      description: latitude
    zoom:
      name: zoom
      in: path
      required: true
      schema:
        type: number
        default: 0
        minimum: 0
        maximum: 22
      description: zoom level
    width:
      name: width
      in: path
      required: true
      schema:
        type: integer
        default: 300
      description: image width (pixel)
    height:
      name: height
      in: path
      required: true
      schema:
        type: number
        default: 200
      description: image height (pixel)
    bbox:
      name: bbox
      in: path
      required: true
      schema:
        type: string
        example: '-4.04296875,-15.114552871944102,48.69140625,19.476950206488414'
      description: 'bbox (minx, miny, maxx, maxy)'
    bearing:
      name: bearing
      in: path
      required: true
      schema:
        type: number
        default: 0
      description: bearing
    pitch:
      name: pitch
      in: path
      required: true
      schema:
        type: number
        default: 0
      description: pitch
    format:
      name: format
      in: path
      required: true
      schema:
        type: string
        default: png
        enum:
          - png
          - jpeg
          - webp
      description: 'Supported format (jpeg, png, webp)'
    ratio:
      name: ratio
      in: query
      required: false
      schema:
        type: integer
        enum:
          - 1
          - 2
        default: 1
      description: ratio. either 1 or 2. Default is 1
    dataset_id:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: Dataset ID
    maplibre_layer_type:
      name: type
      in: path
      required: true
      schema:
        type: string
        enum:
          - fill
          - line
          - symbol
          - circle
          - heatmap
          - fill-extrusion
          - raster
      description: 'Maplibre layer type (fill, line, symbol, circle, heatmap, raster)'
    maplibre_layer_id:
      name: layer
      in: path
      required: true
      schema:
        type: string
      description: 'Band name if it is raster, layer ID if it is vector.'
    maplibre_layer_id_optional:
      name: layer
      in: query
      required: false
      schema:
        type: string
      description: 'Band name if it is raster, layer ID if it is vector.'
    maplibre_layer_type_optional:
      name: type
      in: query
      required: false
      schema:
        type: string
        enum:
          - fill
          - line
          - symbol
          - circle
          - heatmap
          - fill-extrusion
          - raster
      description: 'Maplibre layer type (fill, line, symbol, circle, heatmap, raster)'
  securitySchemes:
    Azure AD authentication:
      type: http
      scheme: oauth
      description: Access to /auth/signin to sign in to Azure AD with your UNDP account.
    API access token:
      name: token
      type: apiKey
      in: query
  responses: {}
