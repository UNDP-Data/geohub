# build the entire application
FROM node:22 AS app_build

ENV DEBIAN_FRONTEND=noninteractive

RUN npm install pnpm -g

# Create app directory
WORKDIR /app

COPY package.json .
COPY pnpm*.yaml .
COPY packages/style-switcher/package.json packages/style-switcher/package.json
COPY packages/svelte-undp-design/package.json packages/svelte-undp-design/package.json
COPY packages/undp-bulma/package.json packages/undp-bulma/package.json
COPY packages/cgaz-admin-tool/package.json packages/cgaz-admin-tool/package.json
COPY packages/svelte-static-image-controls/package.json packages/svelte-static-image-controls/package.json
COPY packages/svelte-maplibre-storymap/package.json packages/svelte-maplibre-storymap/package.json
COPY packages/svelte-undp-components/package.json packages/svelte-undp-components/package.json
COPY sites/geohub/package.json sites/geohub/package.json

RUN pnpm install --frozen-lockfile

COPY . .

RUN pnpm build
RUN cp ./sites/geohub/package.json ./sites/geohub/build/package.json

# Build only geohub dependencies in node_modules
FROM node:22 AS prod_build

ENV NODE_ENV=production
RUN npm install pnpm -g

WORKDIR /app

COPY package.json .
COPY pnpm*.yaml .
COPY packages packages
COPY sites/geohub/package.json sites/geohub/package.json
# delete pnpm-lock and add a setting to .npmrc, so pnpm deploy can work.
RUN rm pnpm-lock.yaml
RUN echo "inject-workspace-packages=true" > .npmrc
RUN pnpm --filter=./sites/geohub --prod deploy /app/production_build

# production image
FROM gcr.io/distroless/nodejs22-debian12

ARG PGTILESERV_API_ENDPOINT
ARG TITILER_ENDPOINT
ARG AZURE_STORAGE_ACCOUNT
ARG AZURE_STORAGE_ACCESS_KEY
ARG AZURE_STORAGE_ACCOUNT_UPLOAD
ARG AZURE_STORAGE_ACCESS_KEY_UPLOAD
ARG AZURE_SERVICE_BUS_CONNECTIONSTRING
ARG AZURE_SERVICE_BUS_QUEUE_NAME
ARG DATABASE_CONNECTION
ARG AUTH_SECRET
ARG AZURE_AD_B2C_TENANT_ID
ARG AZURE_AD_B2C_CLIENT_ID
ARG AZURE_AD_B2C_CLIENT_SECRET
ARG AZURE_AD_B2C_APP_NAME
ARG GEOHUB_GITHUB_ID
ARG GEOHUB_GITHUB_SECRET
ARG AZURE_PUBSUB_CONNECTIONSTRING
ARG AZURE_PUBSUB_GROUP_DATA_PIPELINE
ARG JWT_SECRET_KEY
ARG GEOHUB_STATIC_IMAGE_API
ARG GEOHUB_DOCS_ENDPOINT
ARG SVELTE_UNDP_DESIGN_ENDPOINT
ARG SVELTE_UNDP_COMPONENTS_ENDPOINT
ARG MAPTILER_API_KEY

WORKDIR /geohub
# copy build folder from build image
COPY --from=app_build /app/sites/geohub/build/. /geohub/.
COPY --from=prod_build /app/production_build/node_modules /geohub/node_modules

EXPOSE 3000

CMD [ "index.js"]
