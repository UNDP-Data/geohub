apiVersion: v1
kind: Namespace
metadata:
  name: titiler
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: titiler
  namespace: titiler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: titiler
  template:
    metadata:
      labels:
        app: titiler
    spec:
      nodeSelector:
        type: "manual"
      containers:
        - name: titiler
          image: ghcr.io/undp-data/cogserver:v0.2.1
          #image: undpgeohub.azurecr.io/cogserver-debug
          imagePullPolicy: Always
          resources:
            limits:
              memory: "9G"
              cpu: "2000m"
          env:
            - name: HOST
              value: "0.0.0.0"
            - name: PORT
              value: "80"
            - name: LOG_LEVEL
              value: "info"
            - name: CPL_TMPDIR
              value: /tmp
            - name: GDAL_CACHEMAX
              value: "200"
            - name: VSI_CACHE
              value: "TRUE"
            - name: VSI_CACHE_SIZE
              value: "5000000" # 5 MB (per file-handle)
            - name: GDAL_DISABLE_READDIR_ON_OPEN
              value: "EMPTY_DIR"
            - name: GDAL_HTTP_MERGE_CONSECUTIVE_RANGES
              value: "YES"
            - name: GDAL_HTTP_MULTIPLEX
              value: "YES"
            - name: GDAL_HTTP_VERSION
              value: "2"
            - name: PYTHONWARNINGS
              value: "ignore"
            - name: WEB_CONCURRENCY
              value: "2"
            - name: RELOAD
              value: ""

          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: titiler
  namespace: titiler
  labels:
    app: titiler
spec:
  ports:
    - name: web
      port: 80
      targetPort: 80
  selector:
    app: titiler
  type: ClusterIP # LoadBalancer # NodePort #
  ## load balancer will make the service accessible on the internet using an external ip but no https
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: titiler-ssl-tls-ingress
  namespace: titiler
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
    cert-manager.io/cluster-issuer: zerossl

spec:
  tls:
    - hosts:
        - titiler.undpgeohub.org # update IP address here
      secretName: titiler-cert
  rules:
    - host: titiler.undpgeohub.org # update IP address here
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: titiler
                port:
                  number: 80
