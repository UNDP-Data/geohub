apiVersion: v1
kind: Namespace
metadata:
  name: titiler
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: titiler
  namespace: titiler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: titiler
  template:
    metadata:
      labels:
        app: titiler
    spec:
      nodeSelector:
        type: "manual"
      containers:
        - name: titiler
          #image: ghcr.io/undp-data/cogserver:v0.0.3
          image: undpgeohub.azurecr.io/cogserver-debug
          imagePullPolicy: Always
          resources:
            limits:
              memory: "9G"
              cpu: "3000m"
          env:
            # - name: WEB_CONCURRENCY
            #   value: "1"
            
            # - name: MAX_WORKERS
            #   value: "1"
            # - name: WEB_CONCURRENCY
            #   value: "1"
            # - name: RIO_TILER_MAX_THREADS
            #   value: "1"
            # - name: API_CORS_ORIGIN
            #   value: "*"
---
apiVersion: v1
kind: Service
metadata:
  name: titiler
  namespace: titiler
  labels:
    app: titiler
spec:
  ports:
    - name: web
      port: 80
      targetPort: 80
  selector:
    app: titiler
  type: ClusterIP # LoadBalancer # NodePort #
  ## load balancer will make the service accessible on the internet using an external ip but no https
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: titiler-ssl-tls-ingress
  namespace: titiler
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
    cert-manager.io/cluster-issuer: zerossl

spec:
  tls:
    - hosts:
        - titiler.undpgeohub.org # update IP address here
      secretName: titiler-cert
  rules:
    - host: titiler.undpgeohub.org # update IP address here
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: titiler
                port:
                  number: 80
