{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["type Matrices = {\r\n  lower_class_limits: number[][],\r\n  variance_combinations: number[][]\r\n}\r\n\r\nexport class Jenks {\r\n\r\n  private data: number[]\r\n  private n_classes: number\r\n\r\n  constructor(data: number[], classes: number) {\r\n    this.data = data\r\n    this.n_classes = classes\r\n  }\r\n\r\n  private getMatrices(): Matrices {\r\n    let lower_class_limits: number[][] = []\r\n    let variance_combinations: number[][] = []\r\n    let i: number, j: number, variance: number = 0\r\n    // let variance: number = 0\r\n    \r\n    for(i=0; i < this.data.length + 1; i++) {\r\n      let tmp1: number[] = [], tmp2: number[] = []\r\n      for(j=0; j < this.n_classes + 1; j++) {\r\n        tmp1.push(0)\r\n        tmp2.push(0)\r\n      }\r\n      lower_class_limits.push(tmp1)\r\n      variance_combinations.push(tmp2)\r\n    }\r\n\r\n    for(i=1; i < this.n_classes + 1; i++ ) {\r\n      lower_class_limits[1][i] = 1\r\n      variance_combinations[1][i] = 0\r\n      for(j=2; j < this.data.length + 1; j++) {\r\n        variance_combinations[j][i] = Infinity\r\n      }\r\n    }\r\n\r\n    for(let l = 2; l < this.data.length; l++) {\r\n      let sum: number = 0, sum_squares:number = 0, w: number = 0, i4: number = 0\r\n      for(let m = 1; m < l + 1; m++) {\r\n        let lower_class_limit: number = l - m + 1, val: number = this.data[lower_class_limit - 1]\r\n        w++\r\n        sum += val\r\n        sum_squares += val * val\r\n        variance = sum_squares - (sum * sum) / w\r\n        i4 = lower_class_limit - 1\r\n\r\n        if(i4 !== 0) {\r\n          for(j=2; j<this.n_classes + 1; j++) {\r\n            if(variance_combinations[l][j] >= (variance + variance_combinations[i4][j-1])) {\r\n              lower_class_limits[l][j] = lower_class_limit\r\n              variance_combinations[l][j] = variance + variance_combinations[i4][j-1]\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      lower_class_limits[l][1] = 1\r\n      variance_combinations[l][1] = variance\r\n    }\r\n    \r\n    return {\r\n      lower_class_limits,\r\n      variance_combinations\r\n    }\r\n  }\r\n\r\n  breaks(data: number[], lower_class_limits: number[][], n_classes: number) {\r\n    let k = data.length - 1, kclass: number[] = [], countNum: number = n_classes\r\n    kclass[n_classes] = data[data.length - 1]\r\n    kclass[0] = data[0]\r\n\r\n    while(countNum > 1) {\r\n      kclass[countNum - 1] = data[lower_class_limits[k][countNum] - 2]\r\n      k = lower_class_limits[k][countNum] - 1\r\n      countNum--\r\n    }\r\n    return kclass\r\n  }\r\n\r\n  naturalBreak() {\r\n    if(this.n_classes > this.data.length) return null\r\n    this.data = this.data.slice().sort((a, b) => a - b)\r\n    let matrices: Matrices = this.getMatrices()\r\n    let lower_class_limits = matrices.lower_class_limits\r\n    return this.breaks(this.data, lower_class_limits, this.n_classes)\r\n  }\r\n}"],"names":[],"mappings":"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"}