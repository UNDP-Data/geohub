# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - undpgeohub

on:
  push:
    branches:
      - main
      - develop
  pull_request:
  workflow_dispatch:

env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store
  AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
  AZURE_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCESS_KEY }}
  AZURE_STORAGE_ACCOUNT_UPLOAD: ${{ secrets.AZURE_STORAGE_ACCOUNT_UPLOAD }}
  AZURE_STORAGE_ACCESS_KEY_UPLOAD: ${{ secrets.AZURE_STORAGE_ACCESS_KEY_UPLOAD }}
  DATABASE_CONNECTION: ${{ secrets.DATABASE_CONNECTION }}
  MARTIN_API_ENDPOINT: ${{ secrets.MARTIN_API_ENDPOINT }}
  PGTILESERV_API_ENDPOINT: ${{ secrets.PGTILESERV_API_ENDPOINT }}
  TITILER_ENDPOINT: ${{ secrets.TITILER_ENDPOINT }}
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
  AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
  AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  AZURE_AD_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  AZURE_SERVICE_BUS_CONNECTIONSTRING: ${{ secrets.AZURE_SERVICE_BUS_CONNECTIONSTRING }}
  AZURE_SERVICE_BUS_QUEUE_NAME: ${{ secrets.AZURE_SERVICE_BUS_QUEUE_NAME }}

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: checkout code repository
        uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.6.1
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: install dependencies for maplibre-gl-native
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ccache \
            libcurl4-openssl-dev \
            libglfw3-dev \
            libuv1-dev \
            libicu-dev \
            libjpeg-dev \
            libpng-dev \
            libwebp-dev
          update-ccache-symlinks

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Prettier
        run: pnpm format

      - name: Run lint
        run: pnpm lint

      - name: build
        run: pnpm build

      - name: Run unit tests
        run: pnpm test

      # The following code is important to create node_modules in geohub folder for deploying to production
      # echo "shared-workspace-lockfile = false" >> .npmrc
      - name: Copy package.json / lock files to build folder
        working-directory: ./sites/geohub
        if: ${{ (github.ref == 'refs/heads/main') || (github.ref == 'refs/heads/develop') }}
        run: |
          rm -rf node_modules
          sed -e 's/workspace://g' ./package.json > ./package2.json
          rm package.json
          mv package2.json package.json
          npm install --omit=dev --legacy-peer-deps
          cp package.json build/.
          mv node_modules build/.

      - name: "Deploy to Azure Web App for undpgeohub-dev"
        id: deploy-to-webapp-dev
        uses: azure/webapps-deploy@v2
        if: ${{ github.ref == 'refs/heads/develop'}}
        with:
          app-name: "undpgeohub-dev"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_A746B2A45468422D9E5BF02A6A7ABDCE }}
          package: sites/geohub/build

      - name: "Deploy to Azure for undpgeohub"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        if: ${{ github.ref == 'refs/heads/main'}}
        with:
          app-name: "undpgeohub"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_300BF55889E241EAAC5E83E800D05457 }}
          package: sites/geohub/build
